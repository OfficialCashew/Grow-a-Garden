local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local UserInputService = game:GetService("UserInputService")
local LocalPlayer = Players.LocalPlayer
local GuiService = game:GetService("GuiService")

-- Create ScreenGui
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "AutoBuyGui"
ScreenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
ScreenGui.ResetOnSpawn = false
ScreenGui.IgnoreGuiInset = true

-- Create Main Frame
local MainFrame = Instance.new("Frame")
MainFrame.Size = UDim2.new(0, math.min(350, GuiService:GetScreenResolution().X - 40), 0, 280)
MainFrame.Position = UDim2.new(0.5, -MainFrame.Size.X.Offset/2, 0.5, -140)
MainFrame.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui
local MainCorner = Instance.new("UICorner")
MainCorner.CornerRadius = UDim.new(0, 12)
MainCorner.Parent = MainFrame
local MainGradient = Instance.new("UIGradient")
MainGradient.Color = ColorSequence.new{
    ColorSequenceKeypoint.new(0, Color3.fromRGB(10, 10, 15)),
    ColorSequenceKeypoint.new(1, Color3.fromRGB(30, 30, 80))
}
MainGradient.Parent = MainFrame
local MainStroke = Instance.new("UIStroke")
MainStroke.Color = Color3.fromRGB(100, 100, 255)
MainStroke.Thickness = 2
MainStroke.Parent = MainFrame
local MainScale = Instance.new("UIScale")
MainScale.Scale = 1.02
MainScale.Parent = MainFrame

-- Camera Lock for Mobile
local isTouchingGui = false
local function isTouchInGui(position)
    local guiPos = MainFrame.AbsolutePosition
    local guiSize = MainFrame.AbsoluteSize
    return position.X >= guiPos.X and position.X <= guiPos.X + guiSize.X and
           position.Y >= guiPos.Y and position.Y <= guiPos.Y + guiSize.Y
end
UserInputService.TouchStarted:Connect(function(input)
    if isTouchInGui(input.Position) then
        isTouchingGui = true
        UserInputService.MouseEnabled = false
    end
end)
UserInputService.TouchEnded:Connect(function(input)
    if isTouchingGui then
        isTouchingGui = false
        UserInputService.MouseEnabled = true
    end
end)

-- Drag Functionality
local dragging, dragInput, dragStart, startPos
MainFrame.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
        dragging = true
        dragStart = input.Position
        startPos = MainFrame.Position
        input.Changed:Connect(function()
            if input.UserInputState == Enum.UserInputState.End then
                dragging = false
            end
        end)
    end
end)
MainFrame.InputChanged:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
        dragInput = input
    end
end)
UserInputService.InputChanged:Connect(function(input)
    if input == dragInput and dragging then
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end
end)

-- Minimize Button
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Size = UDim2.new(0, 40, 0, 40)
MinimizeButton.Position = UDim2.new(1, -50, 0, 10)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
MinimizeButton.Text = "–"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 20
MinimizeButton.Parent = MainFrame
local MinimizeCorner = Instance.new("UICorner")
MinimizeCorner.CornerRadius = UDim.new(0, 8)
MinimizeCorner.Parent = MinimizeButton
local MinimizeStroke = Instance.new("UIStroke")
MinimizeStroke.Color = Color3.fromRGB(255, 100, 100)
MinimizeStroke.Thickness = 2
MinimizeStroke.Parent = MinimizeButton
MinimizeButton.MouseEnter:Connect(function()
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
end)
MinimizeButton.MouseLeave:Connect(function()
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
end)

-- Kill Button
local KillButton = Instance.new("TextButton")
KillButton.Size = UDim2.new(0, 40, 0, 40)
KillButton.Position = UDim2.new(1, -100, 0, 10)
KillButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
KillButton.Text = "X"
KillButton.TextColor3 = Color3.fromRGB(255, 255, 255)
KillButton.Font = Enum.Font.GothamBold
KillButton.TextSize = 20
KillButton.Parent = MainFrame
local KillCorner = Instance.new("UICorner")
KillCorner.CornerRadius = UDim.new(0, 8)
KillCorner.Parent = KillButton
local KillStroke = Instance.new("UIStroke")
KillStroke.Color = Color3.fromRGB(255, 100, 100)
KillStroke.Thickness = 2
KillStroke.Parent = KillButton
KillButton.MouseEnter:Connect(function()
    KillButton.BackgroundColor3 = Color3.fromRGB(255, 100, 100)
end)
KillButton.MouseLeave:Connect(function()
    KillButton.BackgroundColor3 = Color3.fromRGB(255, 80, 80)
end)

-- Minimized Button
local MinimizedButton = Instance.new("TextButton")
MinimizedButton.Size = UDim2.new(0, 60, 0, 60)
MinimizedButton.Position = UDim2.new(0, 10, 0, 10)
MinimizedButton.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
MinimizedButton.Text = "GUI"
MinimizedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizedButton.Font = Enum.Font.GothamBold
MinimizedButton.TextSize = 20
MinimizedButton.Visible = false
MinimizedButton.Parent = ScreenGui
local MinimizedCorner = Instance.new("UICorner")
MinimizedCorner.CornerRadius = UDim.new(0, 12)
MinimizedCorner.Parent = MinimizedButton
local MinimizedStroke = Instance.new("UIStroke")
MinimizedStroke.Color = Color3.fromRGB(100, 100, 255)
MinimizedStroke.Thickness = 2
MinimizedStroke.Parent = MinimizedButton
MinimizedButton.MouseEnter:Connect(function()
    MinimizedButton.BackgroundColor3 = Color3.fromRGB(30, 30, 80)
end)
MinimizedButton.MouseLeave:Connect(function()
    MinimizedButton.BackgroundColor3 = Color3.fromRGB(10, 10, 15)
end)

-- Tabs Frame
local TabsFrame = Instance.new("Frame")
TabsFrame.Size = UDim2.new(0, 110, 1, -60)
TabsFrame.Position = UDim2.new(0, 0, 0, 60)
TabsFrame.BackgroundColor3 = Color3.fromRGB(20, 20, 25)
TabsFrame.BorderSizePixel = 0
TabsFrame.Parent = MainFrame
local TabsCorner = Instance.new("UICorner")
TabsCorner.CornerRadius = UDim.new(0, 8)
TabsCorner.Parent = TabsFrame

-- Content Frame
local ContentFrame = Instance.new("Frame")
ContentFrame.Size = UDim2.new(0, MainFrame.Size.X.Offset - 110, 1, -60)
ContentFrame.Position = UDim2.new(0, 110, 0, 60)
ContentFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 20)
ContentFrame.BorderSizePixel = 0
ContentFrame.Parent = MainFrame
local ContentCorner = Instance.new("UICorner")
ContentCorner.CornerRadius = UDim.new(0, 8)
ContentCorner.Parent = ContentFrame

-- Tab Management
local tabs = {
    {Name = "Main", Color = Color3.fromRGB(100, 100, 255)},
    {Name = "Player", Color = Color3.fromRGB(100, 255, 100)},
    {Name = "Shop", Color = Color3.fromRGB(255, 100, 100)}
}
local tabFrames = {}
local currentTab = nil

for i, tab in ipairs(tabs) do
    local TabButton = Instance.new("TextButton")
    TabButton.Size = UDim2.new(1, -10, 0, 50)
    TabButton.Position = UDim2.new(0, 5, 0, (i-1)*55 + 5)
    TabButton.BackgroundColor3 = tab.Color
    TabButton.Text = tab.Name .. "    "
    TabButton.TextXAlignment = Enum.TextXAlignment.Left
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.Font = Enum.Font.GothamBold
    TabButton.TextSize = 20
    TabButton.Parent = TabsFrame
    local TabButtonCorner = Instance.new("UICorner")
    TabButtonCorner.CornerRadius = UDim.new(0, 8)
    TabButtonCorner.Parent = TabButton
    local TabButtonStroke = Instance.new("UIStroke")
    TabButtonStroke.Color = Color3.fromRGB(255, 255, 255)
    TabButtonStroke.Thickness = 1
    TabButtonStroke.Parent = TabButton

    TabButton.MouseEnter:Connect(function()
        TabButton.BackgroundColor3 = tab.Color:Lerp(Color3.fromRGB(255, 255, 255), 0.2)
    end)
    TabButton.MouseLeave:Connect(function()
        TabButton.BackgroundColor3 = tab.Color
    end)

    local TabContent = Instance.new("Frame")
    TabContent.Size = UDim2.new(1, 0, 1, 0)
    TabContent.BackgroundTransparency = 1
    TabContent.Visible = false
    TabContent.Parent = ContentFrame
    tabFrames[tab.Name] = TabContent

    TabButton.MouseButton1Click:Connect(function()
        if currentTab then
            tabFrames[currentTab].Visible = false
        end
        TabContent.Visible = true
        currentTab = tab.Name
    end)
end

-- Minimize Logic
local isMinimized = false
MinimizeButton.MouseButton1Click:Connect(function()
    isMinimized = not isMinimized
    MainFrame.Visible = not isMinimized
    MinimizedButton.Visible = isMinimized
    MinimizeButton.Text = isMinimized and "+" or "–"
end)
MinimizedButton.MouseButton1Click:Connect(function()
    isMinimized = false
    MainFrame.Visible = true
    MinimizedButton.Visible = false
    MinimizeButton.Text = "–"
end)

-- Kill Logic
KillButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Error Message Label
local ErrorLabel = Instance.new("TextLabel")
ErrorLabel.Size = UDim2.new(1, -20, 0, 40)
ErrorLabel.Position = UDim2.new(0, 10, 1, -50)
ErrorLabel.BackgroundColor3 = Color3.fromRGB(80, 20, 20)
ErrorLabel.Text = ""
ErrorLabel.TextColor3 = Color3.fromRGB(255, 200, 200)
ErrorLabel.Font = Enum.Font.Gotham
ErrorLabel.TextSize = 16
ErrorLabel.TextWrapped = true
ErrorLabel.Visible = false
ErrorLabel.Parent = MainFrame
local ErrorCorner = Instance.new("UICorner")
ErrorCorner.CornerRadius = UDim.new(0, 8)
ErrorCorner.Parent = ErrorLabel

-- Main Tab (Info)
local MainContent = tabFrames["Main"]
local discordLabel = Instance.new("TextLabel")
discordLabel.Size = UDim2.new(1, -20, 0, 50)
discordLabel.Position = UDim2.new(0, 10, 0, 10)
discordLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
discordLabel.Text = "Discord: discord.gg/example"
discordLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
discordLabel.Font = Enum.Font.Gotham
discordLabel.TextSize = 18
discordLabel.Parent = MainContent
local DiscordCorner = Instance.new("UICorner")
DiscordCorner.CornerRadius = UDim.new(0, 8)
DiscordCorner.Parent = discordLabel
local DiscordStroke = Instance.new("UIStroke")
DiscordStroke.Color = Color3.fromRGB(100, 100, 255)
DiscordStroke.Thickness = 1
DiscordStroke.Parent = discordLabel

local otherLabel = Instance.new("TextLabel")
otherLabel.Size = UDim2.new(1, -20, 0, 50)
otherLabel.Position = UDim2.new(0, 10, 0, 70)
otherLabel.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
otherLabel.Text = "Other Info: Check website"
otherLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
otherLabel.Font = Enum.Font.Gotham
otherLabel.TextSize = 18
otherLabel.Parent = MainContent
local OtherCorner = Instance.new("UICorner")
OtherCorner.CornerRadius = UDim.new(0, 8)
OtherCorner.Parent = otherLabel
local OtherStroke = Instance.new("UIStroke")
OtherStroke.Color = Color3.fromRGB(100, 100, 255)
OtherStroke.Thickness = 1
OtherStroke.Parent = otherLabel

-- Player Tab
local PlayerContent = tabFrames["Player"]
local invisToggle = Instance.new("TextButton")
invisToggle.Size = UDim2.new(1, -20, 0, 50)
invisToggle.Position = UDim2.new(0, 10, 0, 10)
invisToggle.BackgroundColor3 = Color3.fromRGB(40, 50, 40)
invisToggle.Text = "👻 Invisibility: ❌"
invisToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
invisToggle.Font = Enum.Font.Gotham
invisToggle.TextSize = 18
invisToggle.Parent = PlayerContent
local InvisCorner = Instance.new("UICorner")
InvisCorner.CornerRadius = UDim.new(0, 8)
InvisCorner.Parent = invisToggle
local InvisStroke = Instance.new("UIStroke")
InvisStroke.Color = Color3.fromRGB(100, 255, 100)
InvisStroke.Thickness = 1
InvisStroke.Parent = invisToggle
invisToggle.MouseEnter:Connect(function()
    invisToggle.BackgroundColor3 = Color3.fromRGB(60, 70, 60)
end)
invisToggle.MouseLeave:Connect(function()
    invisToggle.BackgroundColor3 = Color3.fromRGB(40, 50, 40)
end)

local isInvisible = false
local function updateInvisibility()
    local character = LocalPlayer.Character
    if character then
        for _, part in ipairs(character:GetDescendants()) do
            if part:IsA("BasePart") then
                part.Transparency = isInvisible and 1 or 0
                part.CanCollide = not isInvisible
            elseif part:IsA("Decal") then
                part.Transparency = isInvisible and 1 or 0
            end
        end
    end
end
invisToggle.MouseButton1Click:Connect(function()
    isInvisible = not isInvisible
    invisToggle.Text = "👻 Invisibility: " .. (isInvisible and "✅" or "❌")
    updateInvisibility()
end)
LocalPlayer.CharacterAdded:Connect(function()
    if isInvisible then
        wait(0.1)
        updateInvisibility()
    end
end)

local speedLabel = Instance.new("TextLabel")
speedLabel.Size = UDim2.new(1, -20, 0, 50)
speedLabel.Position = UDim2.new(0, 10, 0, 70)
speedLabel.BackgroundColor3 = Color3.fromRGB(40, 50, 40)
speedLabel.Text = "🏃 Speed: 16"
speedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 18
speedLabel.Parent = PlayerContent
local SpeedLabelCorner = Instance.new("UICorner")
SpeedLabelCorner.CornerRadius = UDim.new(0, 8)
SpeedLabelCorner.Parent = speedLabel
local SpeedLabelStroke = Instance.new("UIStroke")
SpeedLabelStroke.Color = Color3.fromRGB(100, 255, 100)
SpeedLabelStroke.Thickness = 1
SpeedLabelStroke.Parent = speedLabel

local speedInput = Instance.new("TextBox")
speedInput.Size = UDim2.new(0, 120, 0, 50)
speedInput.Position = UDim2.new(0, 10, 0, 130)
speedInput.BackgroundColor3 = Color3.fromRGB(60, 70, 60)
speedInput.Text = "16"
speedInput.TextColor3 = Color3.fromRGB(255, 255, 255)
speedInput.Font = Enum.Font.Gotham
speedInput.TextSize = 18
speedInput.PlaceholderText = "Enter speed (0-500)"
speedInput.Parent = PlayerContent
local SpeedInputCorner = Instance.new("UICorner")
SpeedInputCorner.CornerRadius = UDim.new(0, 8)
SpeedInputCorner.Parent = speedInput
local SpeedInputStroke = Instance.new("UIStroke")
SpeedInputStroke.Color = Color3.fromRGB(100, 255, 100)
SpeedInputStroke.Thickness = 1
SpeedInputStroke.Parent = speedInput

speedInput.FocusLost:Connect(function()
    local value = tonumber(speedInput.Text)
    if value and value >= 0 and value <= 500 then
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = value
            speedLabel.Text = "🏃 Speed: " .. value
        end
    else
        speedInput.Text = "16"
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.WalkSpeed = 16
            speedLabel.Text = "🏃 Speed: 16"
        end
    end
end)

local jumpLabel = Instance.new("TextLabel")
jumpLabel.Size = UDim2.new(1, -20, 0, 50)
jumpLabel.Position = UDim2.new(0, 10, 0, 190)
jumpLabel.BackgroundColor3 = Color3.fromRGB(40, 50, 40)
jumpLabel.Text = "🦘 Jump Height: 50"
jumpLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
jumpLabel.Font = Enum.Font.Gotham
jumpLabel.TextSize = 18
jumpLabel.Parent = PlayerContent
local JumpLabelCorner = Instance.new("UICorner")
JumpLabelCorner.CornerRadius = UDim.new(0, 8)
JumpLabelCorner.Parent = jumpLabel
local JumpLabelStroke = Instance.new("UIStroke")
JumpLabelStroke.Color = Color3.fromRGB(100, 255, 100)
JumpLabelStroke.Thickness = 1
JumpLabelStroke.Parent = jumpLabel

local jumpInput = Instance.new("TextBox")
jumpInput.Size = UDim2.new(0, 120, 0, 50)
jumpInput.Position = UDim2.new(0, 10, 0, 250)
jumpInput.BackgroundColor3 = Color3.fromRGB(60, 70, 60)
jumpInput.Text = "50"
jumpInput.TextColor3 = Color3.fromRGB(255, 255, 255)
jumpInput.Font = Enum.Font.Gotham
jumpInput.TextSize = 18
jumpInput.PlaceholderText = "Enter jump height (0-500)"
jumpInput.Parent = PlayerContent
local JumpInputCorner = Instance.new("UICorner")
JumpInputCorner.CornerRadius = UDim.new(0, 8)
JumpInputCorner.Parent = jumpInput
local JumpInputStroke = Instance.new("UIStroke")
JumpInputStroke.Color = Color3.fromRGB(100, 255, 100)
JumpInputStroke.Thickness = 1
JumpInputStroke.Parent = jumpInput

jumpInput.FocusLost:Connect(function()
    local value = tonumber(jumpInput.Text)
    if value and value >= 0 and value <= 500 then
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = value
            jumpLabel.Text = "🦘 Jump Height: " .. value
        end
    else
        jumpInput.Text = "50"
        if LocalPlayer.Character and LocalPlayer.Character:FindFirstChild("Humanoid") then
            LocalPlayer.Character.Humanoid.JumpPower = 50
            jumpLabel.Text = "🦘 Jump Height: 50"
        end
    end
end)

-- Shop Tab
local ShopContent = tabFrames["Shop"]
local seeds = {
    "Carrot", "Strawberry", "Blueberry", "Orange Tulip", "Tomato", "Corn",
    "Daffodil", "Watermelon", "Pumpkin", "Apple", "Bamboo", "Coconut",
    "Cactus", "Dragon Fruit", "Mango", "Grape", "Mushroom", "Pepper",
    "Cacao", "Beanstalk", "Ember Lily", "Sugar Apple", "Burning Bud", "Giant Pinecone"
}
local selectedSeeds = {}

local autoToggle = Instance.new("TextButton")
autoToggle.Size = UDim2.new(1, -20, 0, 50)
autoToggle.Position = UDim2.new(0, 10, 0, 10)
autoToggle.BackgroundColor3 = Color3.fromRGB(50, 40, 40)
autoToggle.Text = "🌱 Auto Buy: ❌"
autoToggle.TextColor3 = Color3.fromRGB(255, 255, 255)
autoToggle.Font = Enum.Font.GothamBold
autoToggle.TextSize = 18
autoToggle.Parent = ShopContent
local AutoToggleCorner = Instance.new("UICorner")
AutoToggleCorner.CornerRadius = UDim.new(0, 8)
AutoToggleCorner.Parent = autoToggle
local AutoToggleStroke = Instance.new("UIStroke")
AutoToggleStroke.Color = Color3.fromRGB(255, 100, 100)
AutoToggleStroke.Thickness = 1
AutoToggleStroke.Parent = autoToggle
autoToggle.MouseEnter:Connect(function()
    autoToggle.BackgroundColor3 = Color3.fromRGB(70, 60, 60)
end)
autoToggle.MouseLeave:Connect(function()
    autoToggle.BackgroundColor3 = Color3.fromRGB(50, 40, 40)
end)

-- Dropdown for Seeds
local dropdownButton = Instance.new("TextButton")
dropdownButton.Size = UDim2.new(1, -20, 0, 50)
dropdownButton.Position = UDim2.new(0, 10, 0, 70)
dropdownButton.BackgroundColor3 = Color3.fromRGB(50, 40, 40)
dropdownButton.Text = "🌾 Select Seeds"
dropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
dropdownButton.Font = Enum.Font.Gotham
dropdownButton.TextSize = 18
dropdownButton.Parent = ShopContent
local DropdownCorner = Instance.new("UICorner")
DropdownCorner.CornerRadius = UDim.new(0, 8)
DropdownCorner.Parent = dropdownButton
local DropdownStroke = Instance.new("UIStroke")
DropdownStroke.Color = Color3.fromRGB(255, 100, 100)
DropdownStroke.Thickness = 1
DropdownStroke.Parent = dropdownButton
dropdownButton.MouseEnter:Connect(function()
    dropdownButton.BackgroundColor3 = Color3.fromRGB(70, 60, 60)
end)
dropdownButton.MouseLeave:Connect(function()
    dropdownButton.BackgroundColor3 = Color3.fromRGB(50, 40, 40)
end)

local dropdownFrame = Instance.new("ScrollingFrame")
dropdownFrame.Size = UDim2.new(1, -20, 0, 130)
dropdownFrame.Position = UDim2.new(0, 10, 0, 130)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 35)
dropdownFrame.BorderSizePixel = 0
dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, #seeds * 40)
dropdownFrame.Visible = false
dropdownFrame.Parent = ShopContent
local DropdownFrameCorner = Instance.new("UICorner")
DropdownFrameCorner.CornerRadius = UDim.new(0, 8)
DropdownFrameCorner.Parent = dropdownFrame

local selectedSeedsLabel = Instance.new("TextLabel")
selectedSeedsLabel.Size = UDim2.new(1, -20, 0, 50)
selectedSeedsLabel.Position = UDim2.new(0, 10, 0, 270)
selectedSeedsLabel.BackgroundColor3 = Color3.fromRGB(50, 40, 40)
selectedSeedsLabel.Text = "Selected: None"
selectedSeedsLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
selectedSeedsLabel.Font = Enum.Font.Gotham
selectedSeedsLabel.TextSize = 16
selectedSeedsLabel.TextWrapped = true
selectedSeedsLabel.TextXAlignment = Enum.TextXAlignment.Left
selectedSeedsLabel.Parent = ShopContent
local SelectedSeedsCorner = Instance.new("UICorner")
SelectedSeedsCorner.CornerRadius = UDim.new(0, 8)
SelectedSeedsCorner.Parent = selectedSeedsLabel
local SelectedSeedsStroke = Instance.new("UIStroke")
SelectedSeedsStroke.Color = Color3.fromRGB(255, 100, 100)
SelectedSeedsStroke.Thickness = 1
SelectedSeedsStroke.Parent = selectedSeedsLabel

local seedButtons = {}
for i, seed in ipairs(seeds) do
    local seedButton = Instance.new("TextButton")
    seedButton.Size = UDim2.new(1, -10, 0, 40)
    seedButton.Position = UDim2.new(0, 5, 0, (i-1)*40)
    seedButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    seedButton.Text = "🌾 " .. seed .. ": ❌"
    seedButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    seedButton.Font = Enum.Font.Gotham
    seedButton.TextSize = 16
    seedButton.TextXAlignment = Enum.TextXAlignment.Left
    seedButton.Parent = dropdownFrame
    local SeedCorner = Instance.new("UICorner")
    SeedCorner.CornerRadius = UDim.new(0, 6)
    SeedCorner.Parent = seedButton
    local SeedStroke = Instance.new("UIStroke")
    SeedStroke.Color = Color3.fromRGB(255, 100, 100)
    SeedStroke.Thickness = 1
    SeedStroke.Parent = seedButton
    seedButtons[seed] = seedButton

    seedButton.MouseEnter:Connect(function()
        seedButton.BackgroundColor3 = Color3.fromRGB(60, 60, 70)
    end)
    seedButton.MouseLeave:Connect(function()
        seedButton.BackgroundColor3 = Color3.fromRGB(40, 40, 50)
    end)

    seedButton.MouseButton1Click:Connect(function()
        selectedSeeds[seed] = not selectedSeeds[seed]
        seedButton.Text = "🌾 " .. seed .. ": " .. (selectedSeeds[seed] and "✅" or "❌")
        local selected = {}
        for s, v in pairs(selectedSeeds) do
            if v then table.insert(selected, s) end
        end
        selectedSeedsLabel.Text = "Selected: " .. (#selected > 0 and table.concat(selected, ", ") or "None")
    end)
end

dropdownButton.MouseButton1Click:Connect(function()
    dropdownFrame.Visible = not dropdownFrame.Visible
end)

-- Auto Buy Script with Enhanced Debugging
_G.auto = false
autoToggle.MouseButton1Click:Connect(function()
    _G.auto = not _G.auto
    autoToggle.Text = "🌱 Auto Buy: " .. (_G.auto and "✅" or "❌")
    ErrorLabel.Visible = false
    if _G.auto then
        spawn(function()
            -- Try primary path: ReplicatedStorage.GameEvents.BuySeedStock
            local success, gameEvents = pcall(function()
                return ReplicatedStorage:WaitForChild("GameEvents", 5)
            end)
            local buySeedStock
            if success and gameEvents then
                success, buySeedStock = pcall(function()
                    return gameEvents:WaitForChild("BuySeedStock", 5)
                end)
            end
            if not success or not gameEvents or not buySeedStock or buySeedStock.ClassName ~= "RemoteEvent" then
                -- Log detailed info
                warn("Primary path check failed:")
                warn("GameEvents: " .. tostring(gameEvents))
                warn("BuySeedStock: " .. tostring(buySeedStock) .. " (Class: " .. (buySeedStock and buySeedStock.ClassName or "nil") .. ")")
                -- Try fallback path: ReplicatedStorage.BuySeedStock
                success, buySeedStock = pcall(function()
                    return ReplicatedStorage:WaitForChild("BuySeedStock", 5)
                end)
                if not success or not buySeedStock or buySeedStock.ClassName ~= "RemoteEvent" then
                    warn("Fallback path check failed:")
                    warn("BuySeedStock: " .. tostring(buySeedStock) .. " (Class: " .. (buySeedStock and buySeedStock.ClassName or "nil") .. ")")
                    -- List all RemoteEvents in ReplicatedStorage for debugging
                    local remoteEvents = {}
                    for _, obj in ipairs(ReplicatedStorage:GetDescendants()) do
                        if obj:IsA("RemoteEvent") then
                            table.insert(remoteEvents, obj:GetFullName())
                        end
                    end
                    warn("Available RemoteEvents in ReplicatedStorage: " .. (#remoteEvents > 0 and table.concat(remoteEvents, ", ") or "None"))
                    _G.auto = false
                    autoToggle.Text = "🌱 Auto Buy: ❌"
                    ErrorLabel.Text = "Error: BuySeedStock not found or invalid"
                    ErrorLabel.Visible = true
                    return
                end
            end
            warn("Using BuySeedStock at: " .. buySeedStock:GetFullName())
            while _G.auto do
                for seed, selected in pairs(selectedSeeds) do
                    if selected then
                        local success, err = pcall(function()
                            buySeedStock:FireServer(seed)
                        end)
                        if not success then
                            warn("Failed to fire BuySeedStock for " .. seed .. ": " .. tostring(err))
                            _G.auto = false
                            autoToggle.Text = "🌱 Auto Buy: ❌"
                            ErrorLabel.Text = "Error: Failed to buy " .. seed
                            ErrorLabel.Visible = true
                            return
                        end
                    end
                end
                wait(0.1)
            end
        end)
    end
end)

-- Show Main Tab by Default
tabFrames["Main"].Visible = true
currentTab = "Main"
