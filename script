--// SERVICES
local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")

local player = Players.LocalPlayer
local mouse = player:GetMouse()

--// GUI SETUP
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "MobileFriendlyHackUI"
gui.ResetOnSpawn = false
gui.IgnoreGuiInset = true
gui.ZIndexBehavior = Enum.ZIndexBehavior.Sibling

--// MAIN FRAME
local mainFrame = Instance.new("Frame")
mainFrame.Size = UDim2.new(0, 380, 0, 300) -- smaller size for mobile
mainFrame.Position = UDim2.new(0.05, 0, 0.1, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.BorderSizePixel = 0
mainFrame.Parent = gui
mainFrame.Active = true
mainFrame.Draggable = true

local corner = Instance.new("UICorner", mainFrame)
corner.CornerRadius = UDim.new(0, 10)

--// TITLE BAR
local titleBar = Instance.new("Frame")
titleBar.Size = UDim2.new(1, 0, 0, 30)
titleBar.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
titleBar.BorderSizePixel = 0
titleBar.Parent = mainFrame

local titleText = Instance.new("TextLabel")
titleText.Size = UDim2.new(1, -60, 1, 0)
titleText.Position = UDim2.new(0, 10, 0, 0)
titleText.Text = "ðŸŒ± Grow a Garden"
titleText.TextColor3 = Color3.new(1, 1, 1)
titleText.TextXAlignment = Enum.TextXAlignment.Left
titleText.BackgroundTransparency = 1
titleText.Font = Enum.Font.GothamBold
titleText.TextSize = 18
titleText.Parent = titleBar

--// MINIMIZE BUTTON
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 25, 0, 25)
minimizeBtn.Position = UDim2.new(1, -55, 0.1, 0)
minimizeBtn.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
minimizeBtn.Text = "-"
minimizeBtn.TextColor3 = Color3.new(1, 1, 1)
minimizeBtn.Font = Enum.Font.Gotham
minimizeBtn.TextSize = 18
minimizeBtn.Parent = titleBar

local cornerMin = corner:Clone()
cornerMin.Parent = minimizeBtn

--// KILL BUTTON
local killBtn = Instance.new("TextButton")
killBtn.Size = UDim2.new(0, 25, 0, 25)
killBtn.Position = UDim2.new(1, -30, 0.1, 0)
killBtn.BackgroundColor3 = Color3.fromRGB(150, 30, 30)
killBtn.Text = "X"
killBtn.TextColor3 = Color3.new(1, 1, 1)
killBtn.Font = Enum.Font.Gotham
killBtn.TextSize = 18
killBtn.Parent = titleBar

local cornerKill = corner:Clone()
cornerKill.Parent = killBtn

--// BODY CONTAINER
local contentFrame = Instance.new("Frame")
contentFrame.Size = UDim2.new(1, 0, 1, -30)
contentFrame.Position = UDim2.new(0, 0, 0, 30)
contentFrame.BackgroundTransparency = 1
contentFrame.Parent = mainFrame

--// NOTE
local noteLabel = Instance.new("TextLabel")
noteLabel.Text = "UI for Grow a Garden"
noteLabel.Size = UDim2.new(1, 0, 0, 40)
noteLabel.Position = UDim2.new(0, 0, 0, 10)
noteLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
noteLabel.BackgroundTransparency = 1
noteLabel.TextSize = 16
noteLabel.Font = Enum.Font.Gotham
noteLabel.Parent = contentFrame

--// INTERACTIONS

local minimized = false

minimizeBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	for _, child in pairs(contentFrame:GetChildren()) do
		if child:IsA("GuiObject") then
			child.Visible = not minimized
		end
	end
end)

killBtn.MouseButton1Click:Connect(function()
	gui:Destroy()
end)

--// OPTIONAL: Draggable fix (in case it doesn't move)
local dragging, dragInput, dragStart, startPos

titleBar.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		dragStart = input.Position
		startPos = mainFrame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then
				dragging = false
			end
		end)
	end
end)

titleBar.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)

RunService.RenderStepped:Connect(function()
	if dragging and dragInput then
		local delta = UserInputService:GetMouseLocation() - dragStart
		mainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
	end
end)
